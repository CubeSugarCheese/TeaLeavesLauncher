name: test build

on:
  workflow_dispatch:
  pull_request:
    branches: [dev]
  push:
    branches: [dev]

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Use Python 3.8.12
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
      
      
    - name: Set up Clang
      uses: egor-tensin/setup-clang@v1
      with:
        version: latest
        platform: x64

    - name: Install dependencies
      run: |
        pip install nuitka
        pip install zstandard 
        pip install -r requirements.txt

    - name: Build with nuitka
      run: python -m nuitka --clang --standalone --assume-yes-for-downloads --output-dir=out --follow-imports --onefile --linux-onefile-icon=icon.ico --include-module=ruamel.yaml --follow-import-to=launcherCore tll.py -o tll.bin
    
    - name: Generate checksum files
    - shell: bash
      run: |
        md5sum out/tll.bin > tll.bin.md5
        sha1sum out/tll.bin > tll.bin.sha1
    
    - name: Upload artifact
      uses: actions/upload-artifact@v2.1.4
      with:
        name: TLL_linux
        path: |
          out/tll.bin
          tll.bin.md5
          tll.bin.sha1


  macOS:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2

    - name: Use Python 3.8.12
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        pip install nuitka
        pip install zstandard 
        pip install -r requirements.txt

    - name: Build with nuitka
      run: python -m nuitka --standalone --assume-yes-for-downloads --output-dir=out --follow-imports --onefile --include-module=ruamel.yaml --follow-import-to=launcherCore tll.py -o tll.bin
      
    - name: Generate checksum files
    - shell: bash
      run: |
        md5 out/tll.bin > tll.bin.md5
        shasum -a 1 out/tll.bin > tll.bin.sha1
        shasum -a 256 out/tll.bin > tll.bin.sha256
    
    - name: Upload artifact
      uses: actions/upload-artifact@v2.1.4
      with:
        name: TLL_macOS
        path: |
          out/tll.bin
          tll.bin.md5
          tll.bin.sha1
          tll.bin.sha255
      
  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - name: Use Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Set up MinGW
      uses: egor-tensin/setup-mingw@v2
      with:
        platform: x64

    - name: Install dependencies
      shell: cmd
      run: |
        pip install nuitka 
        pip install zstandard 
        pip install -r requirements.txt

    - name: Build with nuitka
      shell: cmd
      run: |
        python -m nuitka --mingw64 --standalone --assume-yes-for-downloads --output-dir=out --follow-imports --windows-icon-from-ico=icon.ico --onefile --linux-onefile-icon=icon.ico --include-module=ruamel.yaml --follow-import-to=launcherCore tll.py
    
    - name: Generate checksum files
      shell: powershell
      run: |
        $(CertUtil -hashfile out/tll.exe sha256)[1] -replace " ","" > tll.exe.sha256
        $(CertUtil -hashfile out/tll.exe sha1)[1] -replace " ","" > tll.exe.sha1
      
    - name: Upload artifact
      uses: actions/upload-artifact@v2.1.4
      with:
        name: TLL_win
        path: |
          out/tll.exe
          tll.exe.sha256
          tll.exe.sha1
